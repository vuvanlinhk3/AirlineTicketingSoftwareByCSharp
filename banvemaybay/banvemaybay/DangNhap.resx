<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PPRDAn49AAAAAElFTkSuQmCC
</value>
  </data>
</root>